#!/bin/sh

#####################################################
# this configurescript searches for the needed includes
# and libraries.
#
# it is MUCH faster, smaller and does what I want.
#
# If you have openssl or the Berkeley db installed in 
# an unusual directory like /home/me/install/ssl
# just give it as argument to ./configure
# it then searches for headers in /home/me/install/ssl/include
# and librarys in /home/me/install/ssl/lib
#
# if you have a very unusual setup you can edit Local.mak
# to fit your needs and to reflect your setup
#
#######################################################

DIRS="$@ $QTDIR /usr /usr/X11R6 /usr/local"

CF="-I. -I.."
LIBS=-lstdc++
LDIRS=
MOC=moc
UIC=uic

err() {
  echo ERROR: $1
}

#adds an includedir to $CF
add_include() {
  
  if test "$1" = "/usr/include"; then
    return 0
  fi
  
  if echo ${CF} | grep -v "$1" &>/dev/null; then
  	CF="${CF} -I$1"
  fi
}

add_lib() {
  LIBS="$LIBS -l$2"
  if test "$1" = "/usr/lib"; then
    return 0
  fi
  
  if echo ${LDIRS} | grep -v "$1" &>/dev/null; then
    LDIRS="${LDIRS} -L$1"
  fi
}

# check for includes
search_includes() {
  for dbn in "" ${subdirs}; do
    for dir in ${DIRS};  do
      if test -r ${dir}/include${dbn}/$1; then
        add_include ${dir}/include${dbn}
	echo Found:  $1 at ${dir}/include${dbn}
        return 0
      fi
    done
  done
  return 1
}

# check for libs
search_lib() {
  for dbn in $@; do
    for dir in ${DIRS};  do
      if test -r ${dir}/lib/lib$dbn.so; then
        add_lib ${dir}/lib $dbn;
	echo Found: lib$dbn.so at ${dir}/lib
        return 0
      fi
    done
  done
  return 1
}
 

######################## DB
subdirs="/db /db3 /db4"
search_includes db_cxx.h || err "The Berkeley DB header files were not found"
search_lib db4_cxx db3_cxx db_cxx-4 db_cxx-3 db_cxx || err "The Berkeley DB library was not found. Try installing db-dev" 
## The fun of NPTL... (Thx Enrico Scholz)
echo 'int main() {}' >conftest.c
if g++ $LIBS $LDIRS $CF $CFLAGS conftest.c -o conftest &>conftest.log; then
  :
else
  search_lib pthread || err "Lib pthread needed for db_cxx and not found"
fi

######################### QT
subdirs="/qt"
search_includes qobject.h || err "The QT Library headerfiles were not found. Set QTDIR appropriately."
search_lib qt qt-mt || err "The QT library was not found. Try installing qt-dev" 
search_lib c_r || true
# look if it compiles...
if g++ $LIBS $LDIRS $CF $CFLAGS conftest.c -o conftest &>conftest.log; then
  :
else
  search_lib c_r || err "Libc_r needed for FreeBSD ish systems and was not found"
fi

###################### OpenSSL
subdirs=""
search_includes openssl/opensslv.h || err "The OpenSSL library headerfiles were not found."
search_lib crypto || err "The OpenSSL library was not found."

##### Try to compile them all together and to show the versions.
cat >conftest.c <<EOF
#include <openssl/opensslv.h>
#include <db_cxx.h>
#include <qglobal.h>

main(){
printf("The Verions of the used libraries are:\n\t%s\n\t%s\n\tQT: %s\n",
	 OPENSSL_VERSION_TEXT, DB_VERSION_STRING, QT_VERSION_STR );
}
EOF

if g++ $LIBS $LDIRS $CF $CFLAGS conftest.c -o conftest &>conftest.log ; then
  ./conftest
else
  err "Unable to compile a minimal application look at 'conftest.log' for errors"
  exit 1
fi

#rm -f conftest.c conftest conftest.log


if test -x $QTDIR/bin/moc; then
  MOC="$QTDIR/bin/moc"
fi

if test -x $QTDIR/bin/uic; then
  UIC="$QTDIR/bin/uic"
fi

cat >Local.mak <<EOF
CPPFLAGS=$CF
CFLAGS=${CFLAGS:--Wall}

LDFLAGS=$LDIRS
LIBS=$LIBS

MOC=$MOC
UIC=$UIC

CC=${CC:-gcc}
LD=${LD:-ld}
STRIP=${STRIP:-strip}

prefix=${prefix:-/usr/local}

EOF
